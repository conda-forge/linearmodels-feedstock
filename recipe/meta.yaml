{% set name = "linearmodels" %}
{% set version = "7.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 15b50271068d8ad7ef58924fea6ca3fced055f8439f9e17d2ce62ba91c64ed24

build:
  number: 0
  script:
    - export PYTHONUNBUFFERED=1  # [ppc64le]
    # Cross-compilation stuff vendored from numpy-feedstock
    # necessary for cross-compilation to point to the right env
    - export PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig                                    # [build_platform != target_platform]
    - echo "python = '${PREFIX}/bin/python'" >> ${CONDA_PREFIX}/meson_cross_file.txt  # [build_platform != target_platform]
    - MESON_ARGS_REDUCED="$(echo $MESON_ARGS | sed 's/--buildtype release //g')"  # [unix]
    - {{ PYTHON }} -m pip install -vv --no-deps --ignore-installed . -Csetup-args=${MESON_ARGS_REDUCED// / -Csetup-args=}  # [unix]
    - {{ PYTHON }} -m pip install -vv --no-deps --ignore-installed .  # [not unix]
  skip: true  # [py<310 or python_impl == "pypy"]

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - cython >=3.0.13                        # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - meson-python                           # [build_platform != target_platform]
    - ninja                                  # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ stdlib('c') }}
  host:
    - python
    - pip
    - cython >=3.0.13
    - numpy
    - meson
    - meson-python
    - ninja
    - setuptools
    - setuptools_scm =9.2.0
  run:
    - python
    - numpy
    - scipy >=1.8
    - pandas >=1.4
    - statsmodels >=0.13
    - mypy_extensions >=0.4
    - pyhdfe >=0.1
    - formulaic >=1.2.1
test:
  imports:
    - linearmodels
    - linearmodels.asset_pricing
    - linearmodels.compat
    - linearmodels.datasets
    - linearmodels.datasets.birthweight
    - linearmodels.datasets.card
    - linearmodels.datasets.fertility
    - linearmodels.datasets.french
    - linearmodels.datasets.fringe
    - linearmodels.datasets.jobtraining
    - linearmodels.datasets.meps
    - linearmodels.datasets.mroz
    - linearmodels.datasets.munnell
    - linearmodels.datasets.wage
    - linearmodels.datasets.wage_panel
    - linearmodels.iv
    - linearmodels.panel
    - linearmodels.system
    - linearmodels.tests
    - linearmodels.tests.asset_pricing
    - linearmodels.tests.datasets
    - linearmodels.tests.iv
    - linearmodels.tests.iv.results
    - linearmodels.tests.panel
    - linearmodels.tests.panel.results
    - linearmodels.tests.system
    - linearmodels.tests.system.results
    - linearmodels.typing
  commands:
    # do not run test suite in emulation because it takes a long time
    - pip check
    - python -c "import linearmodels; linearmodels.test(['-m', '(not slow)', '--numprocesses', '{{ CPU_COUNT }}'])"  # [(build_platform == target_platform) and (python_impl == "cpython")]
  requires:
    - pip
    - pytest >=8.4.2
    - pytest-xdist
    - xarray

about:
  home: http://github.com/bashtage/linearmodels
  license: NCSA
  license_family: OTHER
  license_file: LICENSE.md
  summary: Instrumental Variable and Linear Panel models for Python
  description: |
    Linear (regression) models for Python. Extends statsmodels with Panel
    regression, instrumental variable estimators, system estimators and
    models for estimating asset pricing models.
  doc_url: https://bashtage.github.io/linearmodels
  dev_url: https://github.com/bashtage/linearmodels

extra:
  recipe-maintainers:
    - khwilson
    - bashtage
